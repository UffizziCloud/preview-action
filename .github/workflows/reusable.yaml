name: Reusable Uffizzi Preview Workflow

on:
  workflow_call:
    inputs:
      compose-file-cache-key:
        description: "GHA Cache Key for Docker Compose file ready to deploy"
        required: true
        type: string
      compose-file-cache-path:
        description: "GHA Cache Path for Docker Compose file ready to deploy"
        required: true
        type: string
      username:
        description: "Uffizzi username for login, usually an email address"
        required: true
        type: string
      server:
        description: "Uffizzi server URL"
        default: https://app.uffizzi.com
        required: false
        type: string
      project:
        description: "Uffizzi project name"
        default: default
        required: false
        type: string

    secrets:
      password:
        description: "Uffizzi password for login"
        required: true

    outputs:
      url:
        description: "URL to Uffizzi Preview Environment"
        value: ${{ jobs.uffizzi-preview.outputs.url }}
      id:
        description: "Uffizzi Preview Deployment ID"
        value: ${{ jobs.uffizzi-preview.outputs.id }}

permissions:
  contents: read
  pull-requests: write

jobs:
  uffizzi-preview:
    name: "Create, Update, or Delete Preview on Uffizzi"
    runs-on: ubuntu-20.04
    outputs:
      url: ${{ steps.preview.outputs.url }}
      id: ${{ steps.preview.outputs.id }}
    steps:
      # If PR event, look for an existing Preview Deployment.
      - name: Find comment for deployment URL
        uses: peter-evans/find-comment@v2
        if: github.event_name == 'pull_request'
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'Uffizzi Preview ID:'
          direction: last

      - name: Parse Comment for Preview Deployment ID
        id: parse-comment
        if: ${{ steps.find-comment.outputs.comment-id != '' }}
        # voodoo
        run: 'echo ''${{ steps.find-comment.outputs.comment-body }}'' | sed -n "s/Uffizzi Preview ID: \`\(\S*\)\`/::set-output name=id::\1/p"'
      - name: DEBUG - Echo deployment ID
        run: 'echo ${{ steps.parse-comment.outputs.id }}'

      - name: Delete Preview from Uffizzi
        if: ${{ github.event.action == 'closed' && steps.parse-comment.outputs.id != '' }}
        uses: UffizziCloud/delete-preview-action@main
        with:
          id: ${{ steps.parse-comment.outputs.id }}
          username: ${{ inputs.username }}
          server: ${{ inputs.server }}
          project: ${{ inputs.project }}
          password: ${{ secrets.password }}
      - name: Update comment with deletion.
        uses: peter-evans/create-or-update-comment@v2
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Uffizzi Preview `${{ steps.parse-comment.outputs.id }}` was deleted.
          edit-mode: replace

      - name: Fetch cached Compose File
        id: cache
        if: ${{ github.event.action != 'closed' }}
        uses: actions/cache@v3
        with:
          path: ${{ inputs.compose-file-cache-path }}
          key: ${{ inputs.compose-file-cache-key }}

      - name: Deploy New Preview
        id: create-preview
        if: ${{ steps.find-comment.outputs.comment-id == '' && github.event.action != 'closed' }}
        uses: UffizziCloud/preview-action@v2
        with:
          compose-file: ${{ inputs.compose-file-cache-path }}
          username: ${{ inputs.username }}
          server: ${{ inputs.server }}
          project: ${{ inputs.project }}
          password: ${{ secrets.password }}
      - name: Check outputs
        if: ${{ steps.find-comment.outputs.comment-id == '' && github.event.action != 'closed' }}
        run: echo "${{ steps.create-preview.outputs.id }} at ${{ steps.create-preview.outputs.url }}"
      - name: Confirm Successful Preview Deployment
        if: ${{ steps.find-comment.outputs.comment-id == '' && github.event.action != 'closed' }}
        uses: docker://curlimages/curl:7.82.0
        with:
          args: --retry 12 --retry-all-errors --retry-delay 0 --fail --location ${{ steps.create-preview.outputs.url }}
      - name: Create or update comment for deployment URL
        uses: peter-evans/create-or-update-comment@v2
        if: ${{ steps.find-comment.outputs.comment-id == '' && github.event.action != 'closed' }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Uffizzi Preview deployed at URL:
            ${{ steps.create-preview.outputs.url }}

            Uffizzi Preview ID: `${{ steps.create-preview.outputs.id }}`
          edit-mode: replace
          reactions: rocket

      - name: Update Existing Preview
        uses: UffizziCloud/update-preview-action@v1
        id: update-preview
        if: ${{ steps.parse-comment.outputs.id != '' && github.event.action != 'closed' }}
        with:
          preview-id: ${{ steps.parse-comment.outputs.id }}
          compose-file: ${{ inputs.compose-file-cache-path }}
          username: ${{ inputs.username }}
          server: ${{ inputs.server }}
          project: ${{ inputs.project }}
          password: ${{ secrets.password }}
      - name: Check outputs
        if: ${{ steps.parse-comment.outputs.id != '' && github.event.action != 'closed' }}
        run: echo "${{ steps.update-preview.outputs.id }} at ${{ steps.update-preview.outputs.url }}"
      - name: Confirm Successful Preview Deployment
        if: ${{ steps.parse-comment.outputs.id != '' && github.event.action != 'closed' }}
        uses: docker://curlimages/curl:7.82.0
        with:
          args: --retry 12 --retry-all-errors --retry-delay 0 --fail --location ${{ steps.update-preview.outputs.url }}
      - name: Create or update comment for deployment URL
        uses: peter-evans/create-or-update-comment@v2
        if: ${{ steps.parse-comment.outputs.id != '' && github.event.action != 'closed' }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Uffizzi Preview updated at URL:
            ${{ steps.update-preview.outputs.url }}

            Uffizzi Preview ID: `${{ steps.update-preview.outputs.id }}`
          edit-mode: replace
          reactions: '+1'
