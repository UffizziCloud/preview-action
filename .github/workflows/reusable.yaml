name: Reusable Uffizzi Preview Workflow

on:
  workflow_call:
    inputs:
      compose-file-cache-key:
        description: "GHA Cache Key for Docker Compose file ready to deploy"
        required: true
        type: string
      compose-file-cache-path:
        description: "GHA Cache Path for Docker Compose file ready to deploy"
        required: true
        type: string
      username:
        description: "Uffizzi username for login, usually an email address"
        required: false
        type: string
      server:
        description: "Uffizzi server URL"
        default: https://app.uffizzi.com
        required: false
        type: string
      project:
        description: "Uffizzi project name"
        default: default
        required: false
        type: string
    secrets:
      password:
        description: "Uffizzi password for login"
        required: false
      url-username:
        description: "Username for authenticating to each Environment"
        required: false
      url-password:
        description: "Password for authentication to each Environment"
        required: false
      personal-access-token:
        description: "GitHub personal access token with access to container registry"
        required: false
      dockerhub-username:
        description: 'DockerHub username'
        required: false
      dockerhub-password:
        description: 'DockerHub password'
        required: false

    outputs:
      url:
        description: "URL to Uffizzi Preview Environment"
        value: ${{ jobs.uffizzi-preview.outputs.url }}
      id:
        description: "Uffizzi Preview Deployment ID"
        value: ${{ jobs.uffizzi-preview.outputs.id }}

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  uffizzi-preview:
    name: "Create, Update, or Delete Preview on Uffizzi"
    runs-on: ubuntu-20.04
    outputs:
      url: ${{ steps.outputs.outputs.url }}
      id: ${{ steps.outputs.outputs.id }}
    steps:
      - name: Obtain an a job token and an OIDC token request url from GHA
        uses: actions/github-script@v6
        id: ci-job-token
        with:
          debug: true
          script: |
            const token = process.env['ACTIONS_RUNTIME_TOKEN']
            const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL']
            core.setOutput('request-token', token.trim())
            core.setOutput('request-token-url', runtimeUrl.trim())
      # If PR event, look for an existing Preview Deployment.
      - name: Find Deployment for this Pull Request
        id: find-deployment
        if: github.event_name == 'pull_request'
        uses: docker://uffizzi/cli:v1
        run: |
          docker-entrypoint.sh
          echo ::set-output name=id::$(uffizzi preview list --filter "github.repository=${{ github.repository }} github.event.number=${{ github.event.number }}")
        env:
          UFFIZZI_PASSWORD: ${{ secrets.password }}
          UFFIZZI_SERVER: ${{ inputs.server }}
          UFFIZZI_USER: ${{ inputs.username }}
          UFFIZZI_PROJECT: ${{ inputs.project }}
          REQUEST_TOKEN: ${{ steps.ci-job-token.outputs.request-token-url }}
          REQUEST_TOKEN_URL: ${{ steps.ci-job-token.outputs.request-token-url }}
      - name: DEBUG - Echo deployment ID
        run: 'echo ${{ steps.parse-comment.outputs.id }}'
      - name: Delete Preview from Uffizzi
        if: ${{ github.event.action == 'closed' && steps.parse-comment.outputs.id != '' }}
        uses: UffizziCloud/delete-preview-action@v1
        with:
          id: ${{ steps.parse-comment.outputs.id }}
          username: ${{ inputs.username }}
          server: ${{ inputs.server }}
          project: ${{ inputs.project }}
          password: ${{ secrets.password }}
          request-token: ${{ steps.ci-job-token.outputs.request-token }}
          request-token-url: ${{ steps.ci-job-token.outputs.request-token-url }}
      - name: Update comment with deletion.
        uses: peter-evans/create-or-update-comment@v2
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Uffizzi Preview `${{ steps.parse-comment.outputs.id }}` was deleted.
          edit-mode: replace

      - name: Fetch cached Compose File
        id: cache
        if: ${{ github.event.action != 'closed' }}
        uses: actions/cache@v3
        with:
          path: ${{ inputs.compose-file-cache-path }}
          key: ${{ inputs.compose-file-cache-key }}
      - name: Deploy New Preview
        id: create-preview
        if: ${{ steps.find-comment.outputs.comment-id == '' && github.event.action != 'closed' }}
        uses: UffizziCloud/preview-action@labels
        with:
          compose-file: ${{ inputs.compose-file-cache-path }}
          username: ${{ inputs.username }}
          server: ${{ inputs.server }}
          project: ${{ inputs.project }}
          password: ${{ secrets.password }}
          ghcr-username: ${{ github.actor }}
          ghcr-access-token: ${{ secrets.personal-access-token }}
          github-event-number: ${{ github.event.number }}
          github-ref: ${{ github.ref }}
          github-repository: ${{ github.repository }}
          request-token: ${{ steps.ci-job-token.outputs.request-token }}
          request-token-url: ${{ steps.ci-job-token.outputs.request-token-url }}
          dockerhub-username: ${{ secrets.dockerhub-username }}
          dockerhub-password: ${{ secrets.dockerhub-password }}

      - name: Check if URL Authentication is in use
        # GHA limitation workaround https://github.com/actions/runner/issues/520#issuecomment-700579336
        id: url-auth-for-create
        shell: bash
        run: if [ -z "${{ secrets.url-password }}" ]; then echo "No URL authentication."; else echo '::set-output name=enabled::true'; fi
      - name: Confirm Successful Preview Deployment
        if: ${{ steps.find-comment.outputs.comment-id == '' && github.event.action != 'closed' && steps.url-auth-for-create.outputs.enabled == '' }}
        uses: docker://curlimages/curl:7.84.0
        with:
          args: --retry 12 --retry-all-errors --retry-delay 0 --fail --location ${{ steps.create-preview.outputs.url }}
      - name: Confirm Successful Preview Deployment with Authentication
        if: ${{ steps.find-comment.outputs.comment-id == '' && github.event.action != 'closed' && steps.url-auth-for-create.outputs.enabled == 'true' }}
        uses: docker://curlimages/curl:7.84.0
        with:
          args: --basic --user ${{ secrets.url-username }}:${{ secrets.url-password }} --retry 12 --retry-all-errors --retry-delay 0 --fail --location ${{ steps.create-preview.outputs.url }}
      - name: Create comment for deployment URL
        uses: peter-evans/create-or-update-comment@v2
        if: ${{ steps.find-comment.outputs.comment-id == '' && github.event.action != 'closed' }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Uffizzi Preview deployed at URL:
            ${{ steps.create-preview.outputs.url }}

            Uffizzi Preview deployment details at URI:
            ${{ steps.create-preview.outputs.containers_uri }}

            Uffizzi Preview ID: `${{ steps.create-preview.outputs.id }}`
          edit-mode: replace
          reactions: rocket

      - name: Update Existing Preview
        uses: UffizziCloud/update-preview-action@v1
        id: update-preview
        if: ${{ steps.parse-comment.outputs.id != '' && github.event.action != 'closed' }}
        with:
          preview-id: ${{ steps.parse-comment.outputs.id }}
          compose-file: ${{ inputs.compose-file-cache-path }}
          username: ${{ inputs.username }}
          server: ${{ inputs.server }}
          project: ${{ inputs.project }}
          password: ${{ secrets.password }}
          ghcr-username: ${{ github.actor }}
          ghcr-access-token: ${{ secrets.personal-access-token }}
          github-event-number: ${{ github.event.number }}
          github-ref: ${{ github.ref }}
          github-repository: ${{ github.repository }}
          request-token: ${{ steps.ci-job-token.outputs.request-token }}
          request-token-url: ${{ steps.ci-job-token.outputs.request-token-url }}
          dockerhub-username: ${{ secrets.dockerhub-username }}
          dockerhub-password: ${{ secrets.dockerhub-password }}
      - name: Check if URL Authentication is in use
        # GHA limitation workaround https://github.com/actions/runner/issues/520#issuecomment-700579336
        id: url-auth-for-update
        shell: bash
        run: if [ -z "${{ secrets.url-password }}" ]; then echo "No URL authentication."; else echo '::set-output name=enabled::true'; fi
      - name: Confirm Successful Preview Deployment
        if: ${{ steps.parse-comment.outputs.id != '' && github.event.action != 'closed' && steps.url-auth-for-update.outputs.enabled == '' }}
        uses: docker://curlimages/curl:7.84.0
        with:
          args: --retry 12 --retry-all-errors --retry-delay 0 --fail --location ${{ steps.update-preview.outputs.url }}
      - name: Confirm Successful Preview Deployment with Authentication
        if: ${{ steps.parse-comment.outputs.id != '' && github.event.action != 'closed' && steps.url-auth-for-update.outputs.enabled == 'true' }}
        uses: docker://curlimages/curl:7.84.0
        with:
          args: --basic --user ${{ secrets.url-username }}:${{ secrets.url-password }} --retry 12 --retry-all-errors --retry-delay 0 --fail --location ${{ steps.update-preview.outputs.url }}
      - name: Update comment for deployment URL
        uses: peter-evans/create-or-update-comment@v2
        if: ${{ steps.parse-comment.outputs.id != '' && github.event.action != 'closed' }}
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Uffizzi Preview updated at URL:
            ${{ steps.update-preview.outputs.url }}

            Uffizzi Preview ID: `${{ steps.update-preview.outputs.id }}`
          edit-mode: replace
          reactions: '+1'
      - name: Job output consolidation
        id: outputs
        if: ${{ github.event.action != 'closed' }}
        run: |
          export CREATE_URL=${{ steps.create-preview.outputs.url }}
          export CREATE_ID=${{ steps.create-preview.outputs.id }}
          export UPDATE_URL=${{ steps.update-preview.outputs.url }}
          export UPDATE_ID=${{ steps.update-preview.outputs.id }}

          export OUTPUT_URL=${CREATE_URL:-$UPDATE_URL}
          export OUTPUT_ID=${CREATE_ID:-$UPDATE_ID}

          echo "Deployment ID $OUTPUT_ID at $OUTPUT_URL"

          echo "::set-output name=id::$OUTPUT_ID"
          echo "::set-output name=url::$OUTPUT_URL"
